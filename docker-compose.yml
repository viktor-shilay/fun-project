version: '3'
services:
  zookeeper-service:
    container_name: zookeeper
    image: quay.io/debezium/zookeeper:1.9
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - ${ZOOKEEPER_PORT}:2181
  kafka-service:
    container_name: kafka
    image: quay.io/debezium/kafka:1.9
    depends_on:
      - zookeeper-service
    ports:
      - ${KAFKA_PORT}:9092
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
  postgres-service:
    container_name: postgres
    image: quay.io/debezium/postgres:11
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  kafka-connector-service:
    container_name: kafka-connector
    image: quay.io/debezium/connect:1.9
    ports:
      - ${CONNECTOR_PORT}:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    depends_on:
      - zookeeper-service
      - kafka-service
      - postgres-service

  kafdrop-service:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka-service
    ports:
      - ${KAFDROP_PORT}:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  producer-service:
    container_name: producer
    build:
      context: producer/.
      dockerfile: Dockerfile
    image: producer-app
    ports:
      - ${PRODUCER_PORT}:8080
    environment:
      spring.datasource.url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - postgres-service

  consumer-service:
    container_name: consumer
    build:
      context: consumer/.
      dockerfile: Dockerfile
    image: consumer-app
    ports:
      - ${CONSUMER_PORT}:8081
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
